*Check Minich Chronotype Questionnaire;
libname sas "\\childrens\research\Palermo_Lab\Manuscripts\_IN PROGRESS\ABCD sex differences sleep and pain\Data\SAS";

*26045 observations and 63 variables;
proc contents data = mctq varnum;run;

proc freq data = mctq;
tables eventname;
run;
/*The FREQ Procedure

                                                                 Cumulative    Cumulative
            eventname                   Frequency     Percent     Frequency      Percent
            ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ
            2_year_follow_up_y_arm_1       10965       42.10         10965        42.10
            3_year_follow_up_y_arm_1       10330       39.66         21295        81.76
            4_year_follow_up_y_arm_1        4750       18.24         26045       100.00
*/


*Variables needed for the analysis;
*btw: range between 0-24 on military time;
data mctq;
set mctq;
btw = mctq_sd_btime_calc;
run;
proc univariate data = mctq;
var btw;
histogram btw;
run;

*fall_asleep_w: range between 0-24 on military time;
data mctq;
set mctq;
fall_asleep_w = mctq_sd_fall_asleep_calc;
run;
proc univariate data = mctq;
var fall_asleep_w;
histogram fall_asleep_w;
run;

*latency_w: range between 0-4 hours (based on self-report rather than calculation);
data mctq;
set mctq;
latency_w = mctq_sd_min_to_sleep_calc;
run;
proc univariate data = mctq;
var latency_w;
histogram latency_w;
run;
proc print data = mctq (obs = 10);
var mctq_sd_min_to_sleep mctq_sd_min_to_sleep_calc latency_w;
run;

*sow: the variable calculated by ABCD is wrong;
*Cecreated the variable to range between 0-24 on military time;
proc print data = mctq (obs = 10);
var mctq_sd_min_to_sleep mctq_sd_min_to_sleep_calc;
run;
data mctq;
set mctq;
sow = mctq_sow_calc;
run;
data mctq;
set mctq;
sow_new = mctq_sd_fall_asleep_calc + mctq_sd_min_to_sleep_calc;
run;
proc univariate data = mctq;
var sow_new;
run;
data mctq;
set mctq;
if sow_new>=24 then sow_new = sow_new-24;
run;
proc print data = mctq(obs = 20);
var mctq_sd_fall_asleep_calc latency_w sow sow_new;
run;
data mctq;
set mctq;
drop sow;
run;
data mctq;
set mctq;
rename sow_new = sow;
run;
proc univariate data = mctq;
var sow;
histogram sow;
run;

*sew;
data mctq;
set mctq;
sew = mctq_sd_wake_up_time_calc;
run;
proc univariate data = mctq;
var sew;
histogram sew;
run;
*Check sleep end time after 12;
proc print data = mctq;
where sew>12;
var sow sew;
run;
*Check the raw data - correctly calculated - some youth have very extreme wake-up time;
proc print data = mctq;
where sew > 12;
var sow mctq_sd_wake_up_time mctq_sd_wake_up_time_hrs1 mctq_sd_wake_up_time_hrs2 mctq_sd_wake_up_miin sew;
run;
*Create usable sleep onset and end time on weekdays;
proc print data = mctq;
where sew > 12;
var sow sew;
run;

*sdw: recalculate using the updated sow variable - about 1% of the population had sleep duration > 12 hours;
data mctq;
set mctq;
sdw = mctq_sdw_calc;
run;
proc univariate data = mctq;
var sdw;
histogram sdw;
run;
*Correcly calculated;
proc print data = mctq (obs = 20);
var mctq_sow_calc mctq_sd_wake_up_time_calc mctq_sdw_calc;
run;
proc print data = mctq (obs = 20);
where sew > 12;
var mctq_sow_calc mctq_sd_wake_up_time_calc mctq_sdw_calc;
run;
*Recalculate the sleep duration variable using the updated sleep onset time;
data mctq;
set mctq;
sdw=.;
if sew>=sow then sdw = sew - sow;
else if sew<sow then sdw = sew - sow+24;
run;
proc print data = mctq;
where sew>12;
var mctq_sow_calc sow mctq_sd_wake_up_time_calc mctq_sdw_calc sdw;
run;
proc means data = mctq;
var sdw;
run;

*btf: range between 0-24 on military time;
data mctq;
set mctq;
btf = mctq_fd_btime_calc;
run;
proc univariate data = mctq;
var btf;
histogram btf;
run;

*latency_w: range between 0-4 hours (based on self-report rather than calculation);
data mctq;
set mctq;
latency_f = mctq_fd_min_to_sleep_calc;
run;
proc univariate data = mctq;
var latency_f;
histogram latency_f;
run;
proc print data = mctq (obs = 10);
var mctq_fd_min_to_sleep mctq_fd_min_to_sleep_calc latency_f;
run;

*sof: the variable calculated by ABCD is wrong;
*Cecreated the variable to range between 0-24 on military time;
proc print data = mctq (obs = 10);
var mctq_fd_time_aget_up_calc mctq_fd_min_to_sleep_calc mctq_sof_calc;
run;
data mctq;
set mctq;
sof=.;
sof = mctq_fd_time_aget_up_calc + mctq_fd_min_to_sleep_calc;
run;
proc univariate data = mctq;
var sof;
histogram sof;
run;
data mctq;
set mctq;
if sof>=24 then sof = sof-24;
run;

*sef;
data mctq;
set mctq;
sef = mctq_fd_wake_up_time_calc;
run;
proc univariate data = mctq;
var sef;
histogram sef;
run;
*Check sleep end time after 12 - a lot more youth wake up after 12 on weekends;
proc print data = mctq;
where sef>12;
var sow sef;
run;
*Create usable sleep onset and end time on weekdays;
proc print data = mctq;
where sef > 12;
var sof sef;
run;

*sdw: recalculate using the updated sow variable - about 1% of the population had sleep duration > 12 hours;
data mctq;
set mctq;
sdf = mctq_sdf_calc;
run;
proc univariate data = mctq;
var sdf;
histogram sdf;
run;
*Correcly calculated;
proc print data = mctq (obs = 20);
var mctq_sof_calc mctq_fd_wake_up_time_calc mctq_sdf_calc;
run;
proc print data = mctq (obs = 20);
where sef > 12;
var mctq_sof_calc mctq_fd_wake_up_time_calc mctq_sdf_calc;
run;
*Recalculate the sleep duration variable using the updated sleep onset time;
data mctq;
set mctq;
sdf=.;
if sef>=sof then sdf = sef - sof;
else if sef<sof then sdf = sef - sof + 24;
run;
proc print data = mctq;
where sef>12;
var mctq_sof_calc sow mctq_fd_wake_up_time_calc mctq_sdf_calc sdf;
run;
proc means data = mctq;
var sdf;
run;

*sdweek - recalculate based on the updated sleep duration;
proc means data = mctq;
var mctq_days_per_week_calc mctq_fd_calc sdw sdf;
run;
data mctq;
set mctq;
sdweek = round((mctq_days_per_week_calc*sdw + mctq_fd_calc*sdf)/7,0.0001);
run;
proc means data = mctq;
var sdweek;
run;
proc print data = mctq(obs=10);
var mctq_days_per_week_calc mctq_fd_calc sdw sdf sdweek;
run;

*msf - recalculate to range between 0-24;
data mctq;
set mctq;
msf = sof + sdf/2;
run;
proc univariate data = mctq;
var msf;
histogram msf;
run;
data mctq;
set mctq;
if msf>=24 then msf = msf-24;
run;

*msw - recalculate to range between 0-24;
data mctq;
set mctq;
msw = sow + sdw/2;
run;
proc univariate data = mctq;
var msw;
histogram msw;
run;
data mctq;
set mctq;
if msw>=24 then msw = msw-24;
run;

*Re-create the Chronotype variable;
proc means data = mctq;
var msw msf;
run;
data mctq;
set mctq;
if mctq_fd_alarm_parent=0 and sdf<=sdw then chrono = msf;
else if mctq_fd_alarm_parent=0 and sdf>sdw then chrono = msf-(sdf-sdweek)/2;
run;
proc univariate data = mctq;
var chrono;
histogram chrono;
run;
data mctq;
set mctq;
if chrono<0 then chrono = chrono+24;
run;
proc means data = mctq;
var chrono;
run;
proc print data = mctq;
where chrono>12 ;
var mctq_days_per_week_calc mctq_fd_calc sdw sdf sdweek msw msf chrono;
run;
proc freq data = mctq;
where chrono>12 ;
tables chrono;
run;
proc print data = mctq;
where chrono>12 and sdweek<20;
var sow sof msf chrono;
run;
proc print data = mctq;
where 21<chrono<24 and sdweek<20 and sdw>1 and sdf>1 and eventname = "2_year_follow_up_y_arm_1";
var sow sdw sof sdf msf chrono;
run;

*Weekly sleep loss (wsl);
data mctq;
set mctq;
if sdweek>sdw then wsl = round((sdweek-sdw)*mctq_days_per_week_calc, 0.0001);
else if sdweek<=sdw then wsl = round((sdweek-sdf)*mctq_fd_calc, 0.0001);
run;
proc univariate data = mctq;
var wsl;
histogram wsl;
run;
proc print data = mctq;
where wsl<0;
var sdw sdf sdweek wsl;
run;
data mctq;
set mctq;
if wsl<0 then wsl=0;
run;
proc print data = mctq;
where wsl>20;
var sdw sdf sdweek wsl;
run;
*Similar value to the variable created by the ABCD study;
proc means data = mctq;
var wsl mctq_slossweek_calc;
run;

*social jetlag;
data mctq;
set mctq;
sjl_rel = msf - msw;
sjl_abs = abs(msf - msw);
run;
proc univariate data = mctq;
var sjl_rel sjl_abs;
histogram sjl_rel sjl_abs;
run;
proc print data = mctq(obs=100);
where sjl_rel<0;
var sjl_rel sjl_abs;
run;

*Save the data;
data sas.mctq;
set mctq;
run;

